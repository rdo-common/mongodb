diff -urp mongodb-src-r2.2.4.orig/src/mongo/platform/atomic_intrinsics_gcc.h mongodb-src-r2.2.4/src/mongo/platform/atomic_intrinsics_gcc.h
--- mongodb-src-r2.2.4.orig/src/mongo/platform/atomic_intrinsics_gcc.h	2013-03-31 21:41:49.000000000 -0500
+++ mongodb-src-r2.2.4/src/mongo/platform/atomic_intrinsics_gcc.h	2013-05-02 15:16:20.652000000 -0500
@@ -14,16 +14,56 @@
  */
 
 /**
- * Implementation of the AtomicIntrinsics<T>::* operations for IA-32 and AMD64 systems using a
- * GCC-compatible compiler toolchain.
+ * Implementation of the AtomicIntrinsics<T>::* operations for GCC-compatible compiler toolchain.
  */
 
 #pragma once
 
 #include <boost/utility.hpp>
 
+#define GCC_VERSION (__GNUC__ * 10000                 \
+                     + __GNUC_MINOR__ * 100           \
+                     + __GNUC_PATCHLEVEL__)
+
 namespace mongo {
 
+// If GCC version >= 4.7.0, we can use the built-in atomic operations
+#if defined(GCC_VERSION) && GCC_VERSION >= 40700
+
+    /**
+     * Instantiation of AtomicIntrinsics<>.
+     */
+    template <typename T>
+    class AtomicIntrinsics {
+    public:
+
+        static T compareAndSwap(volatile T* dest, T expected, T newValue) {
+            return __atomic_compare_exchange_n (dest, &expected, newValue, 0, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);
+        }
+
+        static T swap(volatile T* dest, T newValue) {
+            return __atomic_exchange_n (dest, newValue, __ATOMIC_SEQ_CST);
+        }
+
+        static T load(volatile const T* value) {
+            return __atomic_load_n (value, __ATOMIC_SEQ_CST);
+        }
+
+        static void store(volatile T* dest, T newValue) {
+            __atomic_store_n (dest, newValue, __ATOMIC_SEQ_CST);
+        }
+
+        static T fetchAndAdd(volatile T* dest, T increment) {
+            return __atomic_fetch_add (dest, increment, __ATOMIC_SEQ_CST);
+        }
+
+    private:
+        AtomicIntrinsics();
+        ~AtomicIntrinsics();
+    };
+
+#else // GCC version < 4.7, so we must use legacy (platform-specific) atomic operations
+
     /**
      * Instantiation of AtomicIntrinsics<> for all word types T where sizeof<T> <= sizeof(void *).
      *
@@ -159,4 +199,6 @@ namespace mongo {
         ~AtomicIntrinsics();
     };
 
+#endif // GCC_VERSION >= 40700
+
 }  // namespace mongo
Only in mongodb-src-r2.2.4/src/mongo/platform: atomic_intrinsics_gcc.h.atomics
diff -urp mongodb-src-r2.2.4.orig/src/mongo/platform/bits.h mongodb-src-r2.2.4/src/mongo/platform/bits.h
--- mongodb-src-r2.2.4.orig/src/mongo/platform/bits.h	2013-03-31 21:41:49.000000000 -0500
+++ mongodb-src-r2.2.4/src/mongo/platform/bits.h	2013-05-02 15:16:20.653000000 -0500
@@ -21,7 +21,7 @@
 
 #if defined(__x86_64__) || defined(__amd64__) || defined(_WIN64)
 #define MONGO_PLATFORM_64
-#elif defined(__i386__) || defined(_WIN32)
+#elif defined(__i386__) || defined(_WIN32) || defined(__arm__)
 #define MONGO_PLATFORM_32
 #else
 #error "unknown platform"
Only in mongodb-src-r2.2.4/src/mongo/platform: bits.h.atomics
